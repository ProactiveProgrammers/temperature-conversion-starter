[tool.poetry]
name = "converter"
version = "0.1.0"
description = ""
authors = ["Gregory M. Kapfhammer <gkapfham@allegheny.edu>"]

[tool.poetry.scripts]
converter = "converter.main:cli"

[tool.poetry.dependencies]
python = "^3.8"
rich = "^10.9.0"
typer = "^0.7.0"

[tool.poetry.dev-dependencies]
taskipy = "^1.8.1"
flake8 = "^3.9.2"
pydocstyle = "^6.1.1"
pytest = "^7.1.1"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
pymarkdownlnt = "^0.9.9"
isort = "^5.12.0"
mypy = "^1.1.1"
pylint = "^2.17.1"

[tool.taskipy.tasks]
black = { cmd = "black converter tests --check", help = "Run the black checks for source code format" }
fiximports = { cmd = "isort converter tests", help = "Run isort to fix source code imports" }
fixformat = { cmd = "black converter tests", help = "Run the black checks for source code format" }
isort = { cmd = "isort -c converter tests", help = "Run the isort checks for source code" }
flake8 = { cmd = "flake8 converter tests", help = "Run the flake8 checks for source code documentation" }
markdownlint = { cmd = "poetry run pymarkdown --config .pymarkdown.cfg scan ../writing/reflection.md ../README.md", help = "Run the markdown linter on writing" }
mypy = { cmd = "poetry run mypy converter", help = "Run the mypy type checker for potential type errors" }
pydocstyle = { cmd = "pydocstyle converter tests", help = "Run the pydocstyle checks for source code documentation" }
pylint = { cmd = "pylint converter tests", help = "Run the pylint checks for source code documentation" }
test = { cmd = "pytest -x -s", help = "Run the pytest test suite" }
test-silent = { cmd = "pytest -x --show-capture=no", help = "Run the pytest test suite without showing output" }
all = "task black && task isort && task flake8 && task markdownlint && task mypy && task pydocstyle && task pylint && task test"
lint = "task black && task isort && task flake8 && task markdownlint && task mypy && task pydocstyle && task pylint"

[tool.isort]
include_trailing_comma = true
force_single_line = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
